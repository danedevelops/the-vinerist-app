{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/work/Desktop/Vinerist/client/src/components/reusable/ImgDragAndDropPreview.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDropzone } from \"react-dropzone\";\nimport Upload from \"../../assets/icons/upload.svg\";\nimport React, { useState } from \"react\";\n\nfunction ImgDragAndDrop({\n  setImage,\n  yourImage\n}) {\n  _s();\n\n  const [imgbox, setImgBox] = useState(false);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: \"image/*\",\n    onDrop: acceptedFiles => {\n      setImgBox(true);\n      return setImage(acceptedFiles.map(upFile => Object.assign(upFile, {\n        preview: URL.createObjectURL(upFile)\n      })));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"addreview__test\",\n          children: \"Drop the photo here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Upload,\n          className: \"addreview__uploadimage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : !imgbox ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"vintages__uploadimage addreview__uploadimage\",\n        src: Upload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: yourImage.length > 0 && yourImage.map(upFile => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"addreview__previewimg\",\n              src: upFile.preview,\n              style: {\n                width: \"320px\",\n                height: \"190px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImgDragAndDrop, \"bdxjbFs9jjQ4KtlPIfEwTEs6ypY=\", false, function () {\n  return [useDropzone];\n});\n\n_c = ImgDragAndDrop;\nexport default ImgDragAndDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgDragAndDrop\");","map":{"version":3,"sources":["/Users/work/Desktop/Vinerist/client/src/components/reusable/ImgDragAndDropPreview.jsx"],"names":["useDropzone","React","useState","ImgDragAndDrop","setImage","yourImage","imgbox","setImgBox","getRootProps","getInputProps","isDragActive","accept","onDrop","acceptedFiles","map","upFile","Object","assign","preview","URL","createObjectURL","Upload","length","width","height"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAxB,EAAiD;AAAA;;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM;AAAEM,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDV,WAAW,CAAC;AAChEW,IAAAA,MAAM,EAAE,SADwD;AAEhEC,IAAAA,MAAM,EAAGC,aAAD,IAAmB;AACzBN,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,aAAOH,QAAQ,CACbS,aAAa,CAACC,GAAd,CAAmBC,MAAD,IAChBC,MAAM,CAACC,MAAP,CAAcF,MAAd,EAAsB;AACpBG,QAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,MAApB;AADW,OAAtB,CADF,CADa,CAAf;AAOD;AAX+D,GAAD,CAAjE;AAcA,sBACE;AAAA,2BACE,oBAASP,YAAY,EAArB;AAAA,8BACE,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,YAAY,gBACX;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,GAAG,EAAEW,MAAV;AAAkB,UAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADW,GAKT,CAACf,MAAD,gBACF;AACE,QAAA,SAAS,EAAC,8CADZ;AAEE,QAAA,GAAG,EAAEe;AAFP;AAAA;AAAA;AAAA;AAAA,cADE,GAMF,EAbJ,eAeE;AAAA,kBACGhB,SAAS,CAACiB,MAAV,GAAmB,CAAnB,IACCjB,SAAS,CAACS,GAAV,CAAeC,MAAD,IAAY;AACxB,8BACE;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,uBADZ;AAEE,cAAA,GAAG,EAAEA,MAAM,CAACG,OAFd;AAGE,cAAA,KAAK,EAAE;AAAEK,gBAAAA,KAAK,EAAE,OAAT;AAAkBC,gBAAAA,MAAM,EAAE;AAA1B;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GAnDQrB,c;UAG+CH,W;;;KAH/CG,c;AAqDT,eAAeA,cAAf","sourcesContent":["import { useDropzone } from \"react-dropzone\";\nimport Upload from \"../../assets/icons/upload.svg\";\nimport React, { useState } from \"react\";\n\nfunction ImgDragAndDrop({ setImage, yourImage }) {\n  const [imgbox, setImgBox] = useState(false);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: \"image/*\",\n    onDrop: (acceptedFiles) => {\n      setImgBox(true);\n      return setImage(\n        acceptedFiles.map((upFile) =>\n          Object.assign(upFile, {\n            preview: URL.createObjectURL(upFile),\n          })\n        )\n      );\n    },\n  });\n\n  return (\n    <div>\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <div>\n            <p className=\"addreview__test\">Drop the photo here...</p>\n            <img src={Upload} className=\"addreview__uploadimage\" />\n          </div>\n        ) : !imgbox ? (\n          <img\n            className=\"vintages__uploadimage addreview__uploadimage\"\n            src={Upload}\n          />\n        ) : (\n          \"\"\n        )}\n        <div>\n          {yourImage.length > 0 &&\n            yourImage.map((upFile) => {\n              return (\n                <div>\n                  <img\n                    className=\"addreview__previewimg\"\n                    src={upFile.preview}\n                    style={{ width: \"320px\", height: \"190px\" }}\n                  />\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImgDragAndDrop;\n"]},"metadata":{},"sourceType":"module"}