
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 2.13.0
 * Query Engine version: 833ab05d2a20e822f6736a39a27de4fc8f6b3e49
 */
Prisma.prismaVersion = {
  client: "2.13.0",
  engine: "833ab05d2a20e822f6736a39a27de4fc8f6b3e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */

Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.WineriesScalarFieldEnum = makeEnum({
  id: 'id',
  winery_name: 'winery_name',
  winery_address: 'winery_address',
  winery_desc: 'winery_desc',
  coordinates: 'coordinates'
});

exports.Prisma.WineriesImagesScalarFieldEnum = makeEnum({
  id: 'id',
  wineryID: 'wineryID',
  imageLink: 'imageLink'
});

exports.Prisma.VintagesScalarFieldEnum = makeEnum({
  id: 'id',
  vintage_name: 'vintage_name',
  vintage_year: 'vintage_year',
  assoc_winery: 'assoc_winery',
  description: 'description'
});

exports.Prisma.VintagesImagesScalarFieldEnum = makeEnum({
  id: 'id',
  vintagesID: 'vintagesID',
  imageLink: 'imageLink'
});

exports.Prisma.ReviewsScalarFieldEnum = makeEnum({
  id: 'id',
  user_id: 'user_id',
  user_level: 'user_level',
  user_review: 'user_review',
  star_review: 'star_review',
  timestamp: 'timestamp',
  likes: 'likes',
  vintageID: 'vintageID'
});

exports.Prisma.ReviewsImagesScalarFieldEnum = makeEnum({
  id: 'id',
  reviewsID: 'reviewsID',
  imageLink: 'imageLink'
});

exports.Prisma.User_AccountsScalarFieldEnum = makeEnum({
  id: 'id',
  hash: 'hash',
  email: 'email',
  creation_Date: 'creation_Date'
});

exports.Prisma.UsersScalarFieldEnum = makeEnum({
  id: 'id',
  first_name: 'first_name',
  last_name: 'last_name',
  new_user: 'new_user',
  account_ID: 'account_ID',
  user_img: 'user_img'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});


exports.Prisma.ModelName = makeEnum({
  Wineries: 'Wineries',
  WineriesImages: 'WineriesImages',
  Vintages: 'Vintages',
  VintagesImages: 'VintagesImages',
  Reviews: 'Reviews',
  ReviewsImages: 'ReviewsImages',
  User_Accounts: 'User_Accounts',
  Users: 'Users'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma-client-js/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
